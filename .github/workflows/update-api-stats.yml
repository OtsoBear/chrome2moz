name: Update API Coverage Stats

on:
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Mondays
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'src/parser/javascript.rs'
      - 'src/transformer/**'
      - 'src/scripts/fetch_chrome_only_apis.rs'

jobs:
  update-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          
      - name: Build
        run: cargo build --release --features cli
        
      - name: Fetch stats
        id: stats
        run: |
          set -e
          OUTPUT=$(cargo run --release chrome-only-apis 2>&1)
          echo "$OUTPUT"
          
          TOTAL=$(echo "$OUTPUT" | grep -oP 'Total Chrome-only APIs.*?: \K\d+' || echo "0")
          IMPL=$(echo "$OUTPUT" | grep -oP 'Implemented.*?: \K\d+' || echo "0")
          NOT_IMPL=$(echo "$OUTPUT" | grep -oP 'Not yet implemented.*?: \K\d+' || echo "0")
          PCT=$(echo "$OUTPUT" | grep -oP 'Implementation coverage.*?: \K\d+' || echo "0")
          
          if [ "$TOTAL" -eq 0 ]; then
            echo "Error: Failed to extract stats"
            exit 1
          fi
          
          if [ "$PCT" -eq 0 ] && [ "$TOTAL" -gt 0 ]; then
            PCT=$(( (IMPL * 100) / TOTAL ))
          fi
          
          NOT_PCT=$(( 100 - PCT ))
          
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "impl=$IMPL" >> $GITHUB_OUTPUT
          echo "not_impl=$NOT_IMPL" >> $GITHUB_OUTPUT
          echo "pct=$PCT" >> $GITHUB_OUTPUT
          echo "not_pct=$NOT_PCT" >> $GITHUB_OUTPUT
          
          echo "Stats: $IMPL/$TOTAL ($PCT%)"
          
      - name: Update README
        run: |
          T="${{ steps.stats.outputs.total }}"
          I="${{ steps.stats.outputs.impl }}"
          N="${{ steps.stats.outputs.not_impl }}"
          P="${{ steps.stats.outputs.pct }}"
          NP="${{ steps.stats.outputs.not_pct }}"
          
          sed -i "s|progress-bar.xyz/[0-9]\\+/|progress-bar.xyz/${P}/|g" README.md
          sed -i "s|\\*\\*[0-9]\\+ of [0-9]\\+ Chrome-only APIs|**${I} of ${T} Chrome-only APIs|g" README.md
          sed -i "s|\\*\\*Total Tracked\\*\\* | [0-9]\\+|**Total Tracked** \\| ${T}|g" README.md
          sed -i "s|\\*\\*Implemented\\*\\* | [0-9]\\+ ([0-9]\\+%)|**Implemented** \\| ${I} (${P}%)|g" README.md
          sed -i "s|\\*\\*Not Implemented\\*\\* | [0-9]\\+ ([0-9]\\+%)|**Not Implemented** \\| ${N} (${NP}%)|g" README.md
          
      - name: Update status doc
        run: |
          T="${{ steps.stats.outputs.total }}"
          I="${{ steps.stats.outputs.impl }}"
          N="${{ steps.stats.outputs.not_impl }}"
          P="${{ steps.stats.outputs.pct }}"
          NP="${{ steps.stats.outputs.not_pct }}"
          
          sed -i "s|> \\*\\*Summary\\*\\*: [0-9]\\+ Chrome-only APIs detected | [0-9]\\+ Implemented ([0-9]\\+%) | [0-9]\\+ Not Implemented ([0-9]\\+%)|> **Summary**: ${T} Chrome-only APIs detected \\| ${I} Implemented (${P}%) \\| ${N} Not Implemented (${NP}%)|g" CHROME_ONLY_API_IMPLEMENTATION_STATUS.md
          sed -i "s|\\*\\*Total Chrome-Only APIs\\*\\* | [0-9]\\+ | 100%|**Total Chrome-Only APIs** \\| ${T} \\| 100%|g" CHROME_ONLY_API_IMPLEMENTATION_STATUS.md
          sed -i "s|\\*\\*Implemented\\*\\* | [0-9]\\+ | [0-9]\\+%|**Implemented** \\| ${I} \\| ${P}%|g" CHROME_ONLY_API_IMPLEMENTATION_STATUS.md
          sed -i "s|\\*\\*Not Implemented\\*\\* | [0-9]\\+ | [0-9]\\+%|**Not Implemented** \\| ${N} \\| ${NP}%|g" CHROME_ONLY_API_IMPLEMENTATION_STATUS.md
          
      - name: Commit
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          if ! git diff --quiet; then
            git add README.md CHROME_ONLY_API_IMPLEMENTATION_STATUS.md
            git commit -m "chore: update API stats [skip ci]" \
              -m "Stats: ${{ steps.stats.outputs.impl }}/${{ steps.stats.outputs.total }} (${{ steps.stats.outputs.pct }}%)"
            git push
          fi
          
      - name: Summary
        if: always()
        run: |
          cat >> $GITHUB_STEP_SUMMARY << EOF
          ## ðŸ“Š Chrome API Coverage
          
          ![Progress](https://progress-bar.xyz/${{ steps.stats.outputs.pct }}/?scale=100&width=400)
          
          | Metric | Value |
          |--------|-------|
          | Total | ${{ steps.stats.outputs.total }} |
          | Implemented | ${{ steps.stats.outputs.impl }} (${{ steps.stats.outputs.pct }}%) |
          | Not Implemented | ${{ steps.stats.outputs.not_impl }} |
          EOF